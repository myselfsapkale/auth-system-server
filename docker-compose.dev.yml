version: '3.8'

services:
  mysqldb:
    image: 'mysql:lts'
    container_name: "mysqldb"
    environment:
      - MYSQL_ROOT_PASSWORD=my-secret-pw
      - MYSQL_DATABASE=authdb
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 30s
      retries: 5
      start_period: 10s
    ports:
      - "3333:3306" 
    volumes:
      - ./installation_help/mysqldemo.sql:/docker-entrypoint-initdb.d/mysqldemo.sql
    networks:
      - mynetwork

  redisdb:
    image: 'redis:latest'
    container_name: 'redisdb'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  iam:
    build:
      context: .
      dockerfile: Dockerfile.dev   # Use Dockerfile.dev for hot reload
    image: 'iam:dev'
    container_name: 'iam-dev'
    depends_on:
      mysqldb:
        condition: service_healthy
      redisdb:
        condition: service_healthy
    environment:
      - MYSQL_HOST=mysqldb
      - REDIS_HOST=redisdb
      - IAM_SERVICE_URL=http://localhost:8000/
    ports:
      - "8000:8000"
    volumes:
      - ./:/usr/src/app           # Mount source code for hot reload
      - /usr/src/app/node_modules # Prevent node_modules overwrite
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/auth/v1/health_check"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

networks:
  mynetwork:
    driver: bridge
    